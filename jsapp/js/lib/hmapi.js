// Generated by CoffeeScript 1.6.3
(function($) {
  $.fn.extend({
    hmapi: function(options, arg, callback) {
      if (options && typeof options === "object") {
        options = $.extend({}, $.hmapi.defaults, options);
      }
      this.each(function() {
        return new $.hmapi(this, options, arg, callback);
      });
      return $(this);
    }
  });
  $.hmapi = function(elem, options, arg, callback) {
    /* update a user*/

    var addGroup, addUser, addUserInGroup, getAllGroup, getGroupById, getGroupByName, getUserById, updateUserById, userIsHungryInGroupId;
    updateUserById = function(arg) {
      var data, id, method, module;
      module = 'users';
      method = 'PUT';
      if (arg.id != null) {
        id = arg.id;
      } else {
        throw new Error("updateUserById(): argument.id must be set (user id)");
      }
      data = {};
      if (arg.name != null) {
        data.name = arg.name;
      }
      if (arg.email != null) {
        data.email = arg.email;
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module + '/' + id,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("updateUserById", json);
        }
      });
    };
    /* get a user by Id*/

    getUserById = function(arg) {
      var id, method, module;
      module = 'users';
      method = 'GET';
      if ((arg != null) && typeof arg === 'int') {
        id = arg;
      } else {
        throw new Error("getUserById(): argument must be user id ");
      }
      return $.ajax({
        type: method,
        cache: false,
        url: $.hmapi.defaults.apiUrl + module + '/' + id,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("getUserById", json);
        }
      });
    };
    /* add a user in db*/

    addUser = function(arg) {
      var data, method, module;
      module = 'users';
      method = 'POST';
      data = {};
      if (arg.name != null) {
        data.name = arg.name;
      } else {
        throw new Error("addUser(): argument.name must be set");
      }
      if (arg.email != null) {
        data.email = arg.email;
      } else {
        throw new Error("addUser(): argument.email must be set");
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("addUser", json);
        }
      });
    };
    /* get all rooms*/

    getAllGroup = function() {
      var method, module;
      module = 'groups';
      method = 'GET';
      return $.ajax({
        type: method,
        cache: false,
        url: $.hmapi.defaults.apiUrl + module,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("getAllGroup", json);
        }
      });
    };
    getGroupByName = function(arg) {
      var data, method, module;
      module = 'groups';
      method = 'GET';
      data = {};
      if (arg != null) {
        data.name = arg;
      } else {
        throw new Error("getGroupByName(): argument must be name (group name)");
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("getGroupByName", json);
        }
      });
    };
    getGroupById = function(arg) {
      var data, id, method, module;
      module = 'groups';
      method = 'GET';
      data = {};
      if (arg != null) {
        id = arg;
      } else {
        throw new Error("getGroupById(): argument must be id (group id)");
      }
      return $.ajax({
        type: method,
        cache: false,
        url: $.hmapi.defaults.apiUrl + module + '/' + id,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("getGroupById", json);
        }
      });
    };
    addGroup = function(arg) {
      var data, method, module;
      module = 'groups';
      method = 'POST';
      data = {};
      if (arg.name != null) {
        data.name = arg.name;
      } else {
        throw new Error("addGroup(): argument.name must be set");
      }
      if (arg.admin != null) {
        data.admin = arg.admin;
      } else {
        throw new Error("addGroup(): argument.admin must be set (user id)");
      }
      if (arg.treshold != null) {
        data.treshold = arg.treshold;
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("addGroup", json);
        }
      });
    };
    userIsHungryInGroupId = function(arg) {
      var data, method, module;
      module = 'clicks';
      method = 'POST';
      data = {};
      if (arg.userId != null) {
        data.userId = arg.userId;
      } else {
        throw new Error("userIsHungryInGroupId(): argument.userId must be set");
      }
      if (arg.groupId != null) {
        data.groupId = arg.groupId;
      } else {
        throw new Error("userIsHungryInGroupId(): argument.groupId must be set");
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module,
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("userIsHungryInGroupId", json);
        }
      });
    };
    addUserInGroup = function(arg) {
      var id, method, module;
      module = 'groups';
      method = 'POST';
      if (arg.userId != null) {
        data.userId = arg.userId;
      } else {
        throw new Error("addUserInGroup(): argument.userId must be set");
      }
      if (arg.groupId != null) {
        id = arg.groupId;
      } else {
        throw new Error("addUserInGroup(): argument.groupId must be set");
      }
      return $.ajax({
        type: method,
        cache: false,
        data: data,
        url: $.hmapi.defaults.apiUrl + module + '/' + id + '/users',
        async: true,
        dataType: "json",
        success: function(json) {
          $.hmapi._callback(json);
          return $.hmapi._this.trigger("userIsHungryInGroupId", json);
        }
      });
    };
    /* ----------------*/

    /* var assignements*/

    /* ----------------*/

    $.hmapi._this = $(elem);
    if (typeof arg === 'function') {
      callback = arg;
    }
    $.hmapi._callback = callback;
    /* -----------------*/

    /* available methods*/

    /* -----------------*/

    if (options && typeof options === "string") {
      if (options === "editUserById") {
        editUserById(arg);
      } else if (options === "getUserById") {
        getUserById(arg);
      } else if (options === "addUser") {
        addUser(arg);
      } else if (options === "getAllGroup") {
        getAllGroup();
      } else if (options === "getGroupByName") {
        getGroupByName(arg);
      } else if (options === "getGroupById") {
        getGroupById(arg);
      } else if (options === "addGroup") {
        addGroup(arg);
      } else if (options === "userIsHungryInGroupId") {
        userIsHungryInGroupId(arg);
      } else if (options === "addGroupInUser") {
        addGroupInUser(arg);
      } else if (options === "addUserInGroup") {
        addUserInGroup(arg);
      } else {
        throw new Error(options + "(): method not available");
      }
    }
  };
  $.hmapi.defaults = {
    apiUrl: "http://10.0.2.80:3000/"
  };
  $.hmapi._this = null;
  return $.hmapi._callback = null;
})(jQuery);
